/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Jframes;

import Classes.Product;
import Classes.ProductManager;
import Classes.User;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author David
 */
public class ManageProductInformation extends javax.swing.JFrame {
String TypeofUser;
boolean checkInput;
boolean checkEmpty;
    /**
     * Creates new form ManageProductInformation
     * @param UserType 
     */
    public ManageProductInformation(String UserType) {
        initComponents();
        TypeofUser = UserType;
        ComboBoxSupplier();
        ComboBoxItems();
        clearProductTable();
        displayProductTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PMManageProductInformationPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        PMProductIDTextBox = new javax.swing.JTextField();
        PMProductNameTextBox = new javax.swing.JTextField();
        PMProductDescTextBox = new javax.swing.JTextField();
        PMProductPriceTextBox = new javax.swing.JTextField();
        PMAddProductButton = new javax.swing.JButton();
        PMModifyProductButton = new javax.swing.JButton();
        PMRemoveProductButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        PMProductCategoryComboBox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        PMSearchProductTextBox = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        PMProductStockTextBox = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        SupplierComboBox = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PMManageProductInformationPanel.setBackground(new java.awt.Color(252, 246, 245));
        PMManageProductInformationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(252, 118, 106));
        jLabel10.setText("X");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        PMManageProductInformationPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1216, 10, 20, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(252, 118, 106));
        jLabel11.setText("ProductID:");
        PMManageProductInformationPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 59, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(252, 118, 106));
        jLabel12.setText("ProductName:");
        PMManageProductInformationPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 59, -1, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(252, 118, 106));
        jLabel13.setText("ProductDescription:");
        PMManageProductInformationPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 168, -1, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(252, 118, 106));
        jLabel14.setText("ProductPrice:");
        PMManageProductInformationPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 117, -1, -1));

        PMProductIDTextBox.setEditable(false);
        PMProductIDTextBox.setBackground(new java.awt.Color(204, 204, 204));
        PMProductIDTextBox.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        PMManageProductInformationPanel.add(PMProductIDTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 80, 180, -1));

        PMProductNameTextBox.setBackground(new java.awt.Color(204, 204, 204));
        PMProductNameTextBox.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        PMManageProductInformationPanel.add(PMProductNameTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 80, 180, -1));

        PMProductDescTextBox.setBackground(new java.awt.Color(204, 204, 204));
        PMProductDescTextBox.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        PMManageProductInformationPanel.add(PMProductDescTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 189, 412, 72));

        PMProductPriceTextBox.setBackground(new java.awt.Color(204, 204, 204));
        PMProductPriceTextBox.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        PMManageProductInformationPanel.add(PMProductPriceTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 141, 180, -1));

        PMAddProductButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        PMAddProductButton.setText("Add Product");
        PMAddProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMAddProductButtonActionPerformed(evt);
            }
        });
        PMManageProductInformationPanel.add(PMAddProductButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1102, 253, 139, -1));

        PMModifyProductButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        PMModifyProductButton.setText("Modify Product");
        PMModifyProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMModifyProductButtonActionPerformed(evt);
            }
        });
        PMManageProductInformationPanel.add(PMModifyProductButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1102, 223, 139, -1));

        PMRemoveProductButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        PMRemoveProductButton.setText("Remove Product");
        PMRemoveProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMRemoveProductButtonActionPerformed(evt);
            }
        });
        PMManageProductInformationPanel.add(PMRemoveProductButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1102, 193, -1, -1));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(252, 118, 106));
        jLabel16.setText("ProductCategory:");
        PMManageProductInformationPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 117, -1, -1));

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductID", "ProductName", "ProductPrice", "ProductCategoryID", "ProductCategoryName", "ProductDescription", "Stock", "Supplier"
            }
        ));
        ProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ProductTable);

        PMManageProductInformationPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 291, 1229, 225));

        PMProductCategoryComboBox.setBackground(new java.awt.Color(204, 204, 204));
        PMManageProductInformationPanel.add(PMProductCategoryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 138, 180, -1));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(252, 118, 106));
        jLabel20.setText("Search Product ID:");
        PMManageProductInformationPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 534, -1, -1));

        PMSearchProductTextBox.setBackground(new java.awt.Color(204, 204, 204));
        PMSearchProductTextBox.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        PMSearchProductTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMSearchProductTextBoxActionPerformed(evt);
            }
        });
        PMSearchProductTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PMSearchProductTextBoxKeyTyped(evt);
            }
        });
        PMManageProductInformationPanel.add(PMSearchProductTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 555, 180, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(252, 118, 106));
        jLabel19.setText("Stock:");
        PMManageProductInformationPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 59, -1, -1));

        PMProductStockTextBox.setBackground(new java.awt.Color(204, 204, 204));
        PMProductStockTextBox.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        PMManageProductInformationPanel.add(PMProductStockTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 80, 90, -1));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(252, 118, 106));
        jLabel22.setText("Supplier:");
        PMManageProductInformationPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 117, -1, -1));

        SupplierComboBox.setBackground(new java.awt.Color(204, 204, 204));
        PMManageProductInformationPanel.add(SupplierComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 138, 151, -1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(252, 118, 106));
        jLabel15.setText("Manage Product Information");
        PMManageProductInformationPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 336, -1));

        jPanel1.add(PMManageProductInformationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1240, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PMAddProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMAddProductButtonActionPerformed
        Product p = new Product();
        EmptyValidation();
        checkinputint();
        generateProductID();
        if (checkEmpty == true && checkInput == true){
            if (PMProductNameTextBox.getText().equals("") || PMProductPriceTextBox.getText().equals ("") || PMProductCategoryComboBox.getSelectedItem().equals("")
                || PMProductDescTextBox.getText().equals("") || PMProductStockTextBox.getText().equals("") || SupplierComboBox.getSelectedItem().equals("")){
                JOptionPane.showMessageDialog(null,"All TextBoxes must be filled in to perform this function");
            }
            else
            {
                String ProductIDInput = PMProductIDTextBox.getText();
                String ProductNameInput = PMProductNameTextBox.getText();
                String ProductPriceInput = PMProductPriceTextBox.getText();
                Object ProductCategoryInput= PMProductCategoryComboBox.getSelectedItem();
                String ProductDescInput = PMProductDescTextBox.getText();
                String ProductStockInput = PMProductStockTextBox.getText();
                Object ProductSupplierInput = SupplierComboBox.getSelectedItem();

                p.setProductID(ProductIDInput);
                p.setProductName(ProductNameInput);
                p.setProductPrice(Double.parseDouble(ProductPriceInput));
                p.setProductCategory((String) ProductCategoryInput);
                p.setProductDesc(ProductDescInput);
                p.setProductStock(Integer.parseInt(ProductStockInput));
                p.setSupplier((String) ProductSupplierInput);
                p.addNewProduct();

                clearProductTable();
                displayProductTable();
            
            }
        }
    }//GEN-LAST:event_PMAddProductButtonActionPerformed

    private void PMModifyProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMModifyProductButtonActionPerformed
        EmptyValidation();
        
        if (checkEmpty == true)
        {
            String carryover = PMProductIDTextBox.getText();
            new ModifyProductInfo(carryover,"PM").setVisible(true);
        }
    }//GEN-LAST:event_PMModifyProductButtonActionPerformed

    private void PMRemoveProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMRemoveProductButtonActionPerformed
        String filePath = "ProductData.txt";
        String removeTerm = PMProductIDTextBox.getText();

        removeRecord(filePath,removeTerm);
    }//GEN-LAST:event_PMRemoveProductButtonActionPerformed

    private void ProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)ProductTable.getModel();
        int ProductTableRows = ProductTable.getSelectedRow();
        PMProductIDTextBox.setText(model.getValueAt(ProductTableRows,0).toString());
        PMProductNameTextBox.setText(model.getValueAt(ProductTableRows,1).toString());
        PMProductPriceTextBox.setText(model.getValueAt(ProductTableRows, 2).toString());
        PMProductCategoryComboBox.setSelectedItem(model.getValueAt(ProductTableRows,4).toString());
        PMProductDescTextBox.setText(model.getValueAt(ProductTableRows,5).toString());
    }//GEN-LAST:event_ProductTableMouseClicked

    private void PMSearchProductTextBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PMSearchProductTextBoxKeyTyped
        String query = PMSearchProductTextBox.getText();
        filterProductTable(query);
    }//GEN-LAST:event_PMSearchProductTextBoxKeyTyped

    private void PMSearchProductTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMSearchProductTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PMSearchProductTextBoxActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    /**
     * @param args the command line arguments
     */

void clearProductTable(){
    DefaultTableModel model = (DefaultTableModel)ProductTable.getModel();
    model.setRowCount(0);
    }
void displayProductTable(){
      DefaultTableModel model = (DefaultTableModel)ProductTable.getModel();
      String line;
      BufferedReader r;
      try{
          File f = new File("ProductData.txt");
          r = new BufferedReader(new FileReader(f));
          while((line = r.readLine()) != null)
          {
              model.addRow(line.split(","));
          }
          r.close();
      }catch(Exception e){
          System.out.println(e);
    }
      
    }    
private void ComboBoxSupplier(){
    DefaultComboBoxModel SupplierModel = new DefaultComboBoxModel();
    String SupplierPath = ("Supplier.txt");
    File SupplierFile = new File(SupplierPath);
    try (Scanner in = new Scanner(SupplierFile)){
        in.useDelimiter("[,\n]");
        while (in.hasNextLine()) {
            String ID;
            ID = in.next();
            in.next();
            in.next();
            in.next();
            in.next();
            in.next();
            in.next();
            in.nextLine();
            SupplierModel.addElement(ID);
            SupplierComboBox.setModel(SupplierModel);
        }
    in.close();
    } catch (FileNotFoundException ex){
        JOptionPane.showMessageDialog(null,"File Path not Found.");
    }
}
private void ComboBoxItems(){
    DefaultComboBoxModel CategoryModel = new DefaultComboBoxModel();
    String CategoryItemPath = ("ProductCategoryData.txt");
    File CategoryItemFile = new File(CategoryItemPath);
    try (Scanner in = new Scanner(CategoryItemFile)){
        in.useDelimiter("[,\n]");
        while (in.hasNextLine()) {
            String line;
            line = in.nextLine();
            CategoryModel.addElement(line);
            PMProductCategoryComboBox.setModel(CategoryModel);
        }
    in.close();
    } catch (FileNotFoundException ex){
        JOptionPane.showMessageDialog(null,"File Path not Found.");
    }
}
private void filterProductTable(String query){
       DefaultTableModel model = (DefaultTableModel)ProductTable.getModel();
       TableRowSorter<DefaultTableModel> querysort = new TableRowSorter<DefaultTableModel>(model);
       ProductTable.setRowSorter(querysort);
       querysort.setRowFilter(RowFilter.regexFilter(query));
    }
private void removeRecord(String filePath, String removeTerm){
        String tempFile = "TempProductData.txt";
        File oldFile = new File(filePath);
        File newFile = new File(tempFile);
        String ID = ""; String Name = ""; String Price = ""; String CatID = ""; String CatName = ""; String Desc = "";
        try
        {
            FileWriter fw = new FileWriter(tempFile, true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            Scanner sc = new Scanner(oldFile);
            
            sc.useDelimiter(",");
            
            while(sc.hasNext())
            {
                ID = sc.next();
                Name = sc.next();
                Price = sc.next();
                CatID = sc.next();
                CatName = sc.next();
                Desc = sc.nextLine();
                if (!ID.equals(removeTerm))
                {
                    pw.println(ID + "," + Name + "," + Price + "," + CatID + "," + CatName + Desc);
                }
            }
            pw.flush();
            pw.close();
            bw.close();
            fw.close();
            sc.close();
            oldFile.delete();
            newFile.renameTo(new File("ProductData.txt"));
            JOptionPane.showMessageDialog(null,"Product Removed");
            clearProductTable();
            displayProductTable();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,e.toString());
            
        }
    }
private void generateProductID (){
    try
    {
        File file = new File ("ProductData.txt");
        Scanner sc = new Scanner(file);
        sc.useDelimiter(",");
        if(sc.hasNext())
        {
            String ID ="";
            while(sc.hasNext()){
                ID = sc.next();
                sc.next();
                sc.next();
                sc.next();
                sc.next();
                sc.nextLine();
        }
        String ID2 = ID.replace("PR","");         //CustomerID pass to ID and replace the words "CID" into "" and pass to ID2
        int ID3 = (Integer.parseInt(ID2))+1;        //Convert ID2 into int and + 1 and pass to ID3
        String ID4 = "PR"+String.valueOf(ID3);     //Convert ID3 into string and add "CID" and pass to ID4
        PMProductIDTextBox.setText(ID4);
        sc.close();
    }
        else
        {
            PMProductIDTextBox.setText("PR1");
        }
}
    catch (Exception e)
            {
                e.printStackTrace();
            }

}
public boolean checkinputint(){
        checkInput = true;
        try {
            Integer.parseInt(PMProductStockTextBox.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null,"Stock must be Integer.");
            checkInput = false;
            return false;
        }
        return true;
    }
    public  boolean EmptyValidation(){
        checkEmpty = true;
            if (PMProductNameTextBox.getText().equals("") || PMProductPriceTextBox.getText().equals ("") || PMProductCategoryComboBox.getSelectedItem().equals("")
                || PMProductDescTextBox.getText().equals("") || PMProductStockTextBox.getText().equals("") || SupplierComboBox.getSelectedItem().equals("")){
                return false;
        }
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PMAddProductButton;
    public javax.swing.JPanel PMManageProductInformationPanel;
    private javax.swing.JButton PMModifyProductButton;
    public javax.swing.JComboBox<String> PMProductCategoryComboBox;
    private javax.swing.JTextField PMProductDescTextBox;
    public javax.swing.JTextField PMProductIDTextBox;
    private javax.swing.JTextField PMProductNameTextBox;
    private javax.swing.JTextField PMProductPriceTextBox;
    private javax.swing.JTextField PMProductStockTextBox;
    private javax.swing.JButton PMRemoveProductButton;
    private javax.swing.JTextField PMSearchProductTextBox;
    private javax.swing.JTable ProductTable;
    private javax.swing.JComboBox<String> SupplierComboBox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
