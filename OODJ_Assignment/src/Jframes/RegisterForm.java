package Jframes;


import Classes.RegistrationClass;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class RegisterForm extends javax.swing.JFrame implements ValidationInterface{
   
    RegistrationClass RC = new RegistrationClass();
    boolean checkempty;
    boolean checkID;
    boolean checkPassword;
    boolean checkICNO = false;
    boolean checkInput = false;
    
    
    public RegisterForm() {
        initComponents();
        UserIDTextField.setEditable(false);
        UserRoleComboBox.addItem("Plese select a role");
        UserRoleComboBox.addItem("Admin");
        UserRoleComboBox.addItem("Product Manager");
        UserRoleComboBox.addItem("Supplier"); 
        EmailTextField.setToolTipText("Recommended format: xxxx@gmail.com");
        ActiveRadioButton.setActionCommand("Active");
        InactiveRadioButton.setActionCommand("Inactive");
    }
    
    private void ComboBoxItem(){
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StatusButtonGroup = new javax.swing.ButtonGroup();
        GenderButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        RegisterFormClose = new javax.swing.JLabel();
        RegisterFormMinimize = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ClearButton = new javax.swing.JButton();
        UsernameLabel5 = new javax.swing.JLabel();
        UsernameLabel6 = new javax.swing.JLabel();
        ICNOTextField = new javax.swing.JTextField();
        UsernameLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        ContactTextField = new javax.swing.JTextField();
        UsernameLabel8 = new javax.swing.JLabel();
        UsernameLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        UsernameLabel11 = new javax.swing.JLabel();
        UsernameTextField = new javax.swing.JTextField();
        EmailTextField = new javax.swing.JTextField();
        UsernameLabel13 = new javax.swing.JLabel();
        InactiveRadioButton = new javax.swing.JRadioButton();
        UsernameLabel14 = new javax.swing.JLabel();
        UserIDTextField = new javax.swing.JTextField();
        RegisterButton1 = new javax.swing.JButton();
        UsernameLabel10 = new javax.swing.JLabel();
        UserRoleComboBox = new javax.swing.JComboBox<>();
        ActiveRadioButton = new javax.swing.JRadioButton();
        RePasswordField = new javax.swing.JPasswordField();
        PasswordField = new javax.swing.JPasswordField();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(137, 171, 227));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Create an Account");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 22, -1, -1));

        RegisterFormClose.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        RegisterFormClose.setForeground(new java.awt.Color(255, 255, 255));
        RegisterFormClose.setText("X");
        RegisterFormClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegisterFormClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterFormCloseMouseClicked(evt);
            }
        });
        jPanel1.add(RegisterFormClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, -1, -1));

        RegisterFormMinimize.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        RegisterFormMinimize.setForeground(new java.awt.Color(255, 255, 255));
        RegisterFormMinimize.setText("_");
        RegisterFormMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegisterFormMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterFormMinimizeMouseClicked(evt);
            }
        });
        jPanel1.add(RegisterFormMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 18, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 706, 50));

        jPanel2.setBackground(new java.awt.Color(252, 246, 245));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ClearButton.setBackground(new java.awt.Color(252, 118, 106));
        ClearButton.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        ClearButton.setForeground(new java.awt.Color(252, 246, 245));
        ClearButton.setText("Clear");
        ClearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });
        jPanel2.add(ClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 130, 40));

        UsernameLabel5.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel5.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel5.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel5.setText("Identification Number");
        jPanel2.add(UsernameLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, -1, -1));

        UsernameLabel6.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel6.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel6.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel6.setText("User ID");
        jPanel2.add(UsernameLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, -1, -1));
        jPanel2.add(ICNOTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 140, 150, -1));

        UsernameLabel7.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel7.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel7.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel7.setText("Status");
        jPanel2.add(UsernameLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 620, 20));
        jPanel2.add(ContactTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 260, 150, -1));

        UsernameLabel8.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel8.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel8.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel8.setText("Username");
        jPanel2.add(UsernameLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        UsernameLabel9.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel9.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel9.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel9.setText("Contact Number");
        jPanel2.add(UsernameLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, -1, -1));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 620, 20));

        UsernameLabel11.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel11.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel11.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel11.setText("Password");
        jPanel2.add(UsernameLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));
        jPanel2.add(UsernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 160, -1));
        jPanel2.add(EmailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 160, -1));

        UsernameLabel13.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel13.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel13.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel13.setText("Email Address");
        jPanel2.add(UsernameLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        InactiveRadioButton.setBackground(new java.awt.Color(252, 246, 245));
        StatusButtonGroup.add(InactiveRadioButton);
        InactiveRadioButton.setText("Inactive");
        jPanel2.add(InactiveRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, -1, -1));

        UsernameLabel14.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel14.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel14.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel14.setText("Re-enter Password");
        jPanel2.add(UsernameLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, -1, -1));
        jPanel2.add(UserIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 150, -1));

        RegisterButton1.setBackground(new java.awt.Color(43, 174, 102));
        RegisterButton1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        RegisterButton1.setForeground(new java.awt.Color(252, 246, 245));
        RegisterButton1.setText("Register");
        RegisterButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegisterButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(RegisterButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 140, 40));

        UsernameLabel10.setBackground(new java.awt.Color(203, 206, 145));
        UsernameLabel10.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        UsernameLabel10.setForeground(new java.awt.Color(252, 118, 106));
        UsernameLabel10.setText("Type of User");
        jPanel2.add(UsernameLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        UserRoleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserRoleComboBoxActionPerformed(evt);
            }
        });
        jPanel2.add(UserRoleComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 160, -1));

        ActiveRadioButton.setBackground(new java.awt.Color(252, 246, 245));
        StatusButtonGroup.add(ActiveRadioButton);
        ActiveRadioButton.setText("Active");
        jPanel2.add(ActiveRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, -1, -1));
        jPanel2.add(RePasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 160, -1));
        jPanel2.add(PasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 160, -1));

        CancelButton.setBackground(new java.awt.Color(252, 118, 106));
        CancelButton.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        CancelButton.setForeground(new java.awt.Color(252, 246, 245));
        CancelButton.setText("Cancel");
        CancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(CancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 380, 130, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 48, 706, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegisterFormCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterFormCloseMouseClicked
        dispose();
    }//GEN-LAST:event_RegisterFormCloseMouseClicked

    private void RegisterFormMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterFormMinimizeMouseClicked
        this.setState(RegisterForm.ICONIFIED);
    }//GEN-LAST:event_RegisterFormMinimizeMouseClicked

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        ClearTextField();
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void RegisterButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButton1ActionPerformed
        EmptyValidation();
        PasswordValidation();
        ICNOValidation();
        checkinputint();
        
        if(checkempty == true && checkPassword == true && checkICNO == true && checkInput == true){
            RC.setUserID(UserIDTextField.getText());
            RC.setUserType(String.valueOf((UserRoleComboBox.getSelectedItem())));
            RC.setUserStatus(StatusButtonGroup.getSelection().getActionCommand());
            RC.setUsername(UsernameTextField.getText());
            RC.setICNO(Integer.parseInt(ICNOTextField.getText()));
            RC.setPassword(String.valueOf(PasswordField.getPassword()));
            RC.setContactNo(Integer.parseInt(ContactTextField.getText()));

            if(RC.getUserID().startsWith("AD")){
            try{
                FileWriter writer = new FileWriter("Admin.txt", true);
                BufferedWriter filecontent = new BufferedWriter(writer);

                String Content = "" + RC.getUserID() + "," + RC.getUsername() + "," + RC.getICNO() + "," + RC.getPassword() + "," + RC.getContactNo() +  "," + RC.getEmailAddress() + "," + "Admin" + ",";
                filecontent.write(Content);
                filecontent.newLine();
                filecontent.close();
                writer.close();
            }
            catch(FileNotFoundException e)
            {
            } catch (IOException ex) {
               
            }
            }
            else if(RC.getUserID().startsWith("PM")){
                try{
                FileWriter writer = new FileWriter("ProductManager.txt", true);
                BufferedWriter filecontent = new BufferedWriter(writer);

                String Content = "" + RC.getUserID() + "," + RC.getUsername() + "," + RC.getICNO() + "," + RC.getPassword() + "," + RC.getContactNo() +  "," + RC.getEmailAddress() + "," + "Product Manager" + "," + StatusButtonGroup.getSelection().getActionCommand() + ",";
                filecontent.write(Content);
                filecontent.newLine();
                filecontent.close();
                writer.close();
            }
            catch(FileNotFoundException e)
            {
            } catch (IOException ex) {
                Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
            else{
                try{
                FileWriter writer = new FileWriter("Supplier.txt", true);
                BufferedWriter filecontent = new BufferedWriter(writer);

                String Content = "" + RC.getUserID() + "," + RC.getUsername() + "," + RC.getICNO() + "," + RC.getPassword() + "," + RC.getContactNo() +  "," + RC.getEmailAddress() + "," + "Supplier" + "," + StatusButtonGroup.getSelection().getActionCommand() + ",";
                filecontent.write(Content);
                filecontent.newLine();
                filecontent.close();
                writer.close();
            }
            catch(FileNotFoundException e)
            {
            } catch (IOException ex) {
               
            }
            }
            JOptionPane.showMessageDialog(null, "User Saved Successful");
            ClearTextField();
            IDGenerator();
        }      
    }//GEN-LAST:event_RegisterButton1ActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.dispose();

    }//GEN-LAST:event_CancelButtonActionPerformed

    private void UserRoleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserRoleComboBoxActionPerformed
        IDGenerator();
    }//GEN-LAST:event_UserRoleComboBoxActionPerformed

    /**
     * @return 
     */
    public boolean checkinputint(){
        checkInput = true;
        try {
            Integer.parseInt(ContactTextField.getText());
            Integer.parseInt(ICNOTextField.getText()); 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Please make sure your input is number.");
            checkInput = false;
            return false;
        }
        return true;
    }
    public void ClearTextField(){
        UserRoleComboBox.getSelectedItem();
        UsernameTextField.setText("");
        EmailTextField.setText("");
        ContactTextField.setText("");
        PasswordField.setText("");
        RePasswordField.setText("");
        StatusButtonGroup.clearSelection();
        GenderButtonGroup.clearSelection();
    }
    @Override
    public void PasswordValidation(){
        checkPassword = true;
        if(!String.valueOf(PasswordField.getPassword()).equals(String.valueOf(RePasswordField.getPassword()))){
            JOptionPane.showMessageDialog(null, "Please make sure your password is correct.");
            checkPassword = false;
        }
        
}
    public void ICNOValidation(){
        String requestICNO = ICNOTextField.getText();
        checkICNO = true;
        
        if(UserRoleComboBox.getSelectedItem() == "Admin"){
            try
            {   
            File file = new File("Admin.txt");
            Scanner sc = new Scanner(file);
            sc.useDelimiter(",");
            if(sc.hasNext())                          //read CustomerID from database
            {
                String ICNO  = "";
                while(sc.hasNext())
                {
                    sc.next();
                    sc.next();
                    ICNO = sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.nextLine();
                }
                if(ICNO.equals(requestICNO)){
                    JOptionPane.showMessageDialog(null, "Sorry, Identification Number duplicated");         
                    checkICNO = false;
                }
            }          
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        }
        
        else if(UserRoleComboBox.getSelectedItem() == "Product Manager"){
            try
            {      
            File file = new File("ProductManager.txt");
            Scanner sc = new Scanner(file);
            sc.useDelimiter(",");
            if(sc.hasNext())                          //read CustomerID from database
            {
                String ICNO  = "";
                while(sc.hasNext())
                {
                    sc.next();
                    sc.next();
                    ICNO = sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.nextLine();
                }
                if(ICNO.equals(requestICNO)){
                    JOptionPane.showMessageDialog(null, "Sorry, Identification Number duplicated");         
                    checkICNO = false;
                }
            }          
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        }
        else if(UserRoleComboBox.getSelectedItem() == "Supplier"){
            try
            {
            File file = new File("Supplier.txt");
            Scanner sc = new Scanner(file);
            sc.useDelimiter(",");
            if(sc.hasNext())                          
            {
                String ICNO  = "";
                while(sc.hasNext())
                {
                    sc.next();
                    sc.next();
                    ICNO = sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.next();
                    sc.nextLine();
                }
                
                if(ICNO.equals(requestICNO)){
                    JOptionPane.showMessageDialog(null, "Sorry, Identification Number is duplicated");         
                    checkICNO = false;
                }
            }          
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        }
    }
    
    @Override
    public  boolean EmptyValidation(){
        checkempty = true;
        if(StatusButtonGroup.getSelection() == null | UserRoleComboBox.getSelectedItem() == null | UserIDTextField.getText() == null | UsernameTextField.getText() == null | String.valueOf(PasswordField.getPassword()) == null | String.valueOf(RePasswordField.getPassword()) == null| ContactTextField.getText()== null | ICNOTextField.getText() == null | EmailTextField.getText() == null){
            JOptionPane.showMessageDialog(null, "There is an empty text field. Please fill in all the empty text fields.", "Empty Content", JOptionPane.WARNING_MESSAGE);
            checkempty = false;
            return false;
        }
        else{
            return true;
        }
    }
    public void IDGenerator(){
        switch((String)UserRoleComboBox.getSelectedItem()){
            case "Product Manager" :
                try{
                    File file = new File("ProductManager.txt");
                    Scanner sc = new Scanner(file);
                    sc.useDelimiter(",");
                    if(sc.hasNext()){
                        String ID ="";
                        while(sc.hasNext()){
                            ID = sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.nextLine();
                    }
                    String ID2 = ID.replace("PM","");         //CustomerID pass to ID and replace the words "CID" into "" and pass to ID2
                    int ID3 = (Integer.parseInt(ID2))+1;        //Convert ID2 into int and + 1 and pass to ID3
                    String ID4 = "PM"+String.valueOf(ID3);     //Convert ID3 into string and add "CID" and pass to ID4
                    UserIDTextField.setText(ID4);                     //Assign the ID to the IDTextBox
                    sc.close();
                }
                    else{
                        UserIDTextField.setText("PM1");                  //if there is no record found in database then set default, CID1.
                    }
                }
                catch (IOException e){
                    e.printStackTrace();
                }
                break;
            
            case "Supplier":
               try{
                    File file = new File("Supplier.txt");
                    Scanner sc = new Scanner(file);
                    sc.useDelimiter(",");
                    if(sc.hasNext()){
                    String ID ="";
                    while(sc.hasNext()){
                        ID = sc.next();
                        sc.next();
                        sc.next();
                        sc.next();
                        sc.next();
                        sc.next();
                        sc.next();
                        sc.next();
                        sc.nextLine();
                    }
                    String ID2 = ID.replace("SU", "");         //CustomerID pass to ID and replace the words "CID" into "" and pass to ID2
                    int ID3 = (Integer.parseInt(ID2))+1;        //Convert ID2 into int and + 1 and pass to ID3
                    String ID4 = "SU"+String.valueOf(ID3);     //Convert ID3 into string and add "CID" and pass to ID4
                    UserIDTextField.setText(ID4);                     //Assign the ID to the IDTextBox
                    sc.close();
                }
                    else{
                    UserIDTextField.setText("SU1");                  //if there is no record found in database then set default, CID1.
                    }
                }
                catch (IOException e){
                    e.printStackTrace();
                }
               break;
            
            case "Admin":
                 try{
                    File file = new File("Admin.txt");
                    Scanner sc = new Scanner(file);
                    sc.useDelimiter(",");
                    if(sc.hasNext())                          //read CustomerID from database
                    {
                        String ID ="";
                        while(sc.hasNext()){
                            ID = sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.next();
                            sc.nextLine();
                        }
                        String ID2 = ID.replace("AD", "");         //CustomerID pass to ID and replace the words "CID" into "" and pass to ID2
                        int ID3 = (Integer.parseInt(ID2))+1;        //Convert ID2 into int and + 1 and pass to ID3
                        String ID4 = "AD"+String.valueOf(ID3);     //Convert ID3 into string and add "CID" and pass to ID4
                        UserIDTextField.setText(ID4);                     //Assign the ID to the IDTextBox
                        sc.close();
                    }
                    else{
                        UserIDTextField.setText("SU1");                  //if there is no record found in database then set default, CID1.
                    }
                }
                catch (IOException e){
                    e.printStackTrace();
                }
        }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ActiveRadioButton;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton ClearButton;
    private javax.swing.JTextField ContactTextField;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.ButtonGroup GenderButtonGroup;
    private javax.swing.JTextField ICNOTextField;
    private javax.swing.JRadioButton InactiveRadioButton;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JPasswordField RePasswordField;
    private javax.swing.JButton RegisterButton1;
    private javax.swing.JLabel RegisterFormClose;
    private javax.swing.JLabel RegisterFormMinimize;
    private javax.swing.ButtonGroup StatusButtonGroup;
    private javax.swing.JTextField UserIDTextField;
    private javax.swing.JComboBox<String> UserRoleComboBox;
    private javax.swing.JLabel UsernameLabel10;
    private javax.swing.JLabel UsernameLabel11;
    private javax.swing.JLabel UsernameLabel13;
    private javax.swing.JLabel UsernameLabel14;
    private javax.swing.JLabel UsernameLabel5;
    private javax.swing.JLabel UsernameLabel6;
    private javax.swing.JLabel UsernameLabel7;
    private javax.swing.JLabel UsernameLabel8;
    private javax.swing.JLabel UsernameLabel9;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

   
    
}
